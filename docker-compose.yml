services:
  author:
    build: ./services/author
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      PERPLEXITY_AI_KEY: ${PERPLEXITY_AI_KEY}
      STRAPI_API_KEY: ${STRAPI_API_KEY}
      STRAPI_BASE_URL: ${STRAPI_BASE_URL}
      ENV_TYPE: ${ENV_TYPE}
    depends_on:
      - postgres
    networks:
      - app_network

  scout:
    build: ./services/scout
    depends_on:
      - postgres
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/service-account-key.json
      GOOGLE_MAPS_KEY: ${GOOGLE_MAPS_KEY}
      PERPLEXITY_AI_KEY: ${PERPLEXITY_AI_KEY}
      ENV_TYPE: ${ENV_TYPE}
    volumes:
      - shared-temp:/tmp/photos
      - ${SERVICE_ACCOUNT_KEY_PATH}:/secrets/service-account-key.json
    networks:
      - app_network

  ssg:
    build: ./services/ssg
    environment:
      STRAPI_API_KEY: ${STRAPI_API_KEY}
      STRAPI_BASE_URL: ${STRAPI_BASE_URL}
      STRAPI_WEBHOOK_KEY: ${STRAPI_WEBHOOK_KEY}
      ENV_TYPE: ${ENV_TYPE}
    volumes:
      - ./website:/app/website
    ports:
      - "8080:8080"
    networks:
      - app_network

  site:
    image: nginx:alpine
    container_name: static-site
    ports:
      - "8000:80"  # Serve on localhost:8080
    volumes:
      - ./website:/usr/share/nginx/html/posts:ro
      - shared-temp:/usr/share/nginx/html/assets:ro

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./services/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  strapi:
    build: ./services/strapi
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapidb
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PASS}
      NODE_ENV: ${NODE_ENV}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - app_network

volumes:
  shared-temp:

networks:
  app_network:
    driver: bridge
